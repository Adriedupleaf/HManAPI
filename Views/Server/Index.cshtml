@model IEnumerable<HManAPI.Models.ServerModel>

@{

     ViewBag.Title = "Game";

}
<!DOCTYPE html>
<!---Coding By CoderGirl!--->
<html lang="en">
<head>
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <meta http-equiv="X-UA-Compatible" content="ie=edge">
     <link rel="stylesheet" href="Game.css">
</head>
<body>
    <div class="data">
        @Html.ActionLink("Create Server", "CreateServer", "Server", routeValues: null, htmlAttributes: new { @class = "btn btn-primary btn-lg btn-block " })
    </div>
     <ul class="list-group">
         @if (Model != null)
         {
         foreach (var server in Model)
         {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @server.name 
                        <span class="badge badge-primary badge-pill badge-custom ">
                            @if (server.isPublic == true)
                            {
                                using (Html.BeginForm("Index", "Game", new { serverName = server.name }, FormMethod.Post, new { @class = "", role = "form" }))
                                {
                                    <button type="submit" class="btn btn-outline-primary btn-sm">
                                        Join
                                    </button>
                                }
                                @*@Html.ActionLink("Join", "Play", "Server", routeValues: new { server.name, server.isPublic, server.password, server.players, server.word }, htmlAttributes: new { @class = "btn btn-outline-primary btn-sm" })*@
                            }
                            else
                            {
                                using (Html.BeginForm("Index", "Game", new { serverName = server.name }, FormMethod.Post, new { @class = "", role = "form" }))
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(m => server.password, new { @class = "col-md-2 control-label" })
                                        @Html.TextBoxFor(m => server.password, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => server.password, "", new { @class = "text-danger" })
                                        <br />
                                    </div>
                                    <button type="submit" class="btn btn-outline-secondary btn-sm">
                                        Join
                                    </button>
                                }
                                @*@Html.ActionLink("Join", "Play", "Server", routeValues: new { server.name, server.isPublic, server.password, server.players, server.word }, htmlAttributes: new { @class = "btn btn-outline-secondary btn-sm" })*@
                            }
                        </span>
                    </li> 
         }
         }
          
     </ul>
</body>
</html>